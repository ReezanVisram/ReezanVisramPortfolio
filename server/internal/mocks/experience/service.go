// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/experience/service.go
//
// Generated by this command:
//
//	mockgen -source=./internal/experience/service.go -destination=./internal/mocks/experience/service.go
//

// Package mock_experience is a generated GoMock package.
package mock_experience

import (
	context "context"
	domain "reezanvisramportfolio/domain/experience"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockExperienceService is a mock of ExperienceService interface.
type MockExperienceService struct {
	ctrl     *gomock.Controller
	recorder *MockExperienceServiceMockRecorder
}

// MockExperienceServiceMockRecorder is the mock recorder for MockExperienceService.
type MockExperienceServiceMockRecorder struct {
	mock *MockExperienceService
}

// NewMockExperienceService creates a new mock instance.
func NewMockExperienceService(ctrl *gomock.Controller) *MockExperienceService {
	mock := &MockExperienceService{ctrl: ctrl}
	mock.recorder = &MockExperienceServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExperienceService) EXPECT() *MockExperienceServiceMockRecorder {
	return m.recorder
}

// GetExperience mocks base method.
func (m *MockExperienceService) GetExperience(ctx context.Context) ([]domain.Experience, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExperience", ctx)
	ret0, _ := ret[0].([]domain.Experience)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExperience indicates an expected call of GetExperience.
func (mr *MockExperienceServiceMockRecorder) GetExperience(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExperience", reflect.TypeOf((*MockExperienceService)(nil).GetExperience), ctx)
}
